{
  "loc.friendlyName": "Xcode",
  "loc.helpMarkDown": "[詳細](https://go.microsoft.com/fwlink/?LinkID=613730)",
  "loc.description": "macOS で Xcode ワークスペースをビルド、テスト、アーカイブします。オプションでアプリをパッケージ化します。",
  "loc.instanceNameFormat": "Xcode $(actions)",
  "loc.releaseNotes": "This version of the task is compatible with Xcode 8, Xcode 9 and Xcode 10. Features that were there solely to maintain compat with Xcode 7 have been removed. The task has better options to work with the Hosted macOS pool.",
  "loc.group.displayName.sign": "署名およびプロビジョニング",
  "loc.group.displayName.package": "パッケージのオプション",
  "loc.group.displayName.devices": "デバイスとシミュレーター",
  "loc.group.displayName.advanced": "詳細設定",
  "loc.input.label.actions": "アクション",
  "loc.input.help.actions": "アクションのスペース区切りのリストを入力します。有効なオプションは、'build'、'clean'、'test'、'analyze'、'archive' です。たとえば、'clean build' はクリーン ビルドを実行します。[xcodebuild man ページ](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html) を参照してください。",
  "loc.input.label.configuration": "構成",
  "loc.input.help.configuration": "ビルドする Xcode プロジェクトまたはワークスペース構成を入力します。このフィールドの既定値は変数 '$(Configuration)' です。変数を使用するときには、[変数] タブに値 (`Release` など) を必ず指定します。",
  "loc.input.label.sdk": "SDK",
  "loc.input.help.sdk": "Xcode プロジェクトまたはワークスペースをビルドするときに使う SDK を指定します。SDK の有効なリストを表示するには、macOS のターミナル アプリケーションから `xcodebuild -showsdks` を実行します。このフィールドの既定値は、変数 `$(SDK)` です。変数を使うときは、[**変数**] タブの値を必ず指定してください (例: `iphonesimulator`)。",
  "loc.input.label.xcWorkspacePath": "ワークスペースまたはプロジェクトのパス",
  "loc.input.help.xcWorkspacePath": "(Optional) Enter a relative path from the root of the repository to the Xcode workspace or project. For example, `MyApp/MyApp.xcworkspace` or `MyApp/MyApp.xcodeproj`. Wildcards can be used ([more information](https://go.microsoft.com/fwlink/?linkid=856077)).",
  "loc.input.label.scheme": "スキーム",
  "loc.input.help.scheme": "(省略可能) Xcode で定義されているスキーム名を入力します。共有スキームである必要があります。そのためには、Xcode の [<strong>マネージド スキーム</strong>] の下にある [<strong>共有</strong>] チェック ボックスを有効にします。スキームを指定しないで上の [<strong>ワークスペースまたはプロジェクトのパス</strong>] を指定し、かつワークスペースが単一の共有スキームを持つ場合、それが自動的に使用されます。",
  "loc.input.label.xcodeVersion": "Xcode バージョン",
  "loc.input.help.xcodeVersion": "Xcode のターゲット バージョンを指定します。エージェント マシン上の Xcode の既定バージョンを使用するには、[既定] を選択します。選択するバージョン番号 (例: [Xcode 9]) は、エージェント マシンに設定されているバージョンの場所の環境変数 (例: XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer) に依存しています。Xcode Developer ディレクトリへの特定のパスを指定する場合には [パスの指定] を選択します。",
  "loc.input.label.xcodeDeveloperDir": "Xcode Developer パス",
  "loc.input.help.xcodeDeveloperDir": "(省略可能) 特定の Xcode Developer ディレクトリ パスを入力します (例: Applications/Xcode_9.0.0.app/Contents/Developer)。これは、エージェント マシンに複数のバージョンの Xcode がインストールされている場合に役立ちます。",
  "loc.input.label.packageApp": "アプリ パッケージの作成",
  "loc.input.help.packageApp": "ビルドの一部として、IPA アプリ パッケージ ファイルを生成するかどうかを指定します。",
  "loc.input.label.archivePath": "アーカイブ パス",
  "loc.input.help.archivePath": "(省略可能) 作成したアーカイブを入れるディレクトリを指定します。",
  "loc.input.label.exportPath": "エクスポート パス",
  "loc.input.help.exportPath": "(省略可能) アーカイブからエクスポートされた製品の宛先を指定します。",
  "loc.input.label.exportOptions": "エクスポート オプション",
  "loc.input.help.exportOptions": "アーカイブのエクスポートのオプションの指定方法を選択します。既定値の [自動] を選択すると、エクスポート方法はアーカイブから自動的に検出されます。エクスポートのオプションを記載した Plist ファイルを指定するには [Plist] を選択します。特定の [**エクスポート方法**] や [**チーム ID**] を指定するには、[指定] を選択します。",
  "loc.input.label.exportMethod": "エクスポート方法",
  "loc.input.help.exportMethod": "Xcode でアーカイブをエクスポートするときに使用するメソッドを入力します。例: `app-store`、`package`、`ad-hoc`、`enterprise`、`development`。",
  "loc.input.label.exportTeamId": "チーム ID",
  "loc.input.help.exportTeamId": "(省略可能) エクスポート時に使用する、Apple Developer ポータルのチーム ID (10 文字) を入力します。",
  "loc.input.label.exportOptionsPlist": "エクスポート オプションの plist",
  "loc.input.help.exportOptionsPlist": "エクスポート中に使用するオプションが入った plist ファイルのパスを入力します。",
  "loc.input.label.exportArgs": "エクスポート引数",
  "loc.input.help.exportArgs": "(省略可能) エクスポート時に使用する追加のコマンド ライン引数を入力します。",
  "loc.input.label.signingOption": "署名スタイル",
  "loc.input.help.signingOption": "ビルドに署名する方法を選択します。署名を無効にする場合は、[署名をコーディングしない] を選択します。プロジェクトの署名構成のみを使用する場合は、[プロジェクトの既定値] を選択します。手動による署名を強制し、必要に応じて署名 ID とプロビジョニング プロファイルを指定する場合は、[手動署名] を選択します。自動署名を強制し、必要に応じて開発チーム ID を指定する場合には [自動署名] を選択します。プロジェクトで署名が必要な場合、Xcode のビルドの前に \"Apple 証明書のインストール\" タスクや \"Apple プロビジョニング プロファイルのインストール\" タスクを使用して、証明書およびプロビジョニング プロファイルをインストールします。",
  "loc.input.label.signingIdentity": "署名 ID",
  "loc.input.help.signingIdentity": "(省略可能) ビルドへの署名に使用する署名 ID のオーバーライドを入力します。これには、エージェント マシン上の既定のキーチェーンをロック解除することが必要な場合があります。値を入力しない場合、Xcode プロジェクトの設定が使用されます。",
  "loc.input.label.provisioningProfileUuid": "プロビジョニング プロファイル UUID",
  "loc.input.help.provisioningProfileUuid": "(省略可能) このビルドに使用される、インストール済みプロビジョニング プロファイルの UUID を入力します。異なるスキームまたはターゲットを持つ個別のビルド タスクを用いて、1 つのワークスペース (iOS、tvOS、watchOS) でターゲットごとに個別のプロビジョニング プロファイルを指定します。",
  "loc.input.label.provisioningProfileName": "Provisioning profile name",
  "loc.input.help.provisioningProfileName": "(Optional) Enter the name of an installed provisioning profile to be used for this build. If specified, this takes precedence over the provisioning profile UUID. Use separate build tasks with different schemes or targets to specify separate provisioning profiles by target in a single workspace (iOS, tvOS, watchOS).",
  "loc.input.label.teamId": "チーム ID",
  "loc.input.help.teamId": "(複数の開発チームのメンバーではない場合には、省略可能) 開発チーム ID (10 文字) を指定します。",
  "loc.input.label.destinationPlatformOption": "対象プラットフォーム",
  "loc.input.help.destinationPlatformOption": "汎用のビルド デバイスが無効な場合に UI テストに使う宛先デバイスのプラットフォームを選択します。このリストに含まれていないプラットフォームを指定するには、[カスタム] を選択します。[既定] を選択すると、どのシミュレーターもデバイスも対象になりません。",
  "loc.input.label.destinationPlatform": "カスタム対象プラットフォーム",
  "loc.input.help.destinationPlatform": "汎用のビルド デバイスが無効な場合に UI テストに使用する対象デバイスのプラットフォームを入力します。",
  "loc.input.label.destinationTypeOption": "対象の種類",
  "loc.input.help.destinationTypeOption": "UI テストに使用する対象の種類を選択します。デバイスは、ケーブルまたはネットワーク接続を使用して、ビルドを実行する Mac に接続する必要があります。Xcode の [<strong>Devices and Simulators</strong>] を参照してください。",
  "loc.input.label.destinationSimulators": "シミュレーター",
  "loc.input.help.destinationSimulators": "Enter an Xcode simulator name to be used for UI testing. For example, enter `iPhone X` (iOS and watchOS) or `Apple TV 4K` (tvOS). A target OS version is optional and can be specified in the format 'OS=<i>versionNumber</i>', such as `iPhone X,OS=11.1`. A list of simulators installed on the <strong>Hosted macOS</strong> agent can be [found here](https://go.microsoft.com/fwlink/?linkid=875290).",
  "loc.input.label.destinationDevices": "デバイス",
  "loc.input.help.destinationDevices": "UI テストに使用するデバイスの名前を入力します。例: 「Raisa の iPad」など。",
  "loc.input.label.args": "引数",
  "loc.input.help.args": "(省略可能) ビルドに使用する追加のコマンド ライン引数を入力します。これは、ワークスペース/プロジェクトおよびスキームを指定する代わりに `-target` 引数または `-project` 引数を指定する場合に役立ちます。[xcodebuild man ページ](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html) を参照してください。",
  "loc.input.label.cwd": "作業ディレクトリ",
  "loc.input.help.cwd": "(省略可能) ビルドを実行する作業ディレクトリを入力します。値を入力しない場合は、リポジトリのルートが使用されます。",
  "loc.input.label.useXcpretty": "xcpretty の使用",
  "loc.input.help.useXcpretty": "Specify whether to use xcpretty to format xcodebuild output. Enabling this requires xcpretty to be installed on the agent machine. If xcpretty is not installed, raw xcodebuild output is shown. xcpretty is preinstalled on Azure Pipelines hosted build agents. See [xcpretty](https://github.com/supermarin/xcpretty) on GitHub.",
  "loc.input.label.publishJUnitResults": "Publish test results to Azure Pipelines/TFS",
  "loc.input.help.publishJUnitResults": "Specify whether to publish JUnit test results to Azure Pipelines/TFS. This requires xcpretty to be enabled to generate JUnit test results.",
  "loc.messages.SignIdNotFound": "iOS 署名 ID が見つかりませんでした。指定された署名とプロビジョニングの情報をご確認ください。",
  "loc.messages.TempKeychainSetupFailed": "一時キーチェーンをキーチェーン検索パスに追加できませんでした。",
  "loc.messages.ProvProfileDetailsNotFound": "プロビジョニング プロファイルの詳細が見つかりませんでした: %s",
  "loc.messages.ProvProfileUUIDNotFound": "プロビジョニング プロファイルの UUID が見つかりませんでした: %s",
  "loc.messages.MultipleWorkspacesFound": "Xcode ワークスペースの複数の一致が見つかりました。最初の一致が使用されます: %s",
  "loc.messages.WorkspaceDoesNotExist": "Xcode ワークスペースが指定されていますが、存在しないか、ディレクトリではありません: %s",
  "loc.messages.UseXcprettyForTestPublishing": "Enable `Use xcpretty` to publish test results. For this build, no test results will be published.",
  "loc.messages.NoTestResultsFound": "`%s` と一致するテスト結果ファイルが見つかりませんでした。JUnit テスト結果の発行はスキップされます。",
  "loc.messages.XcodeSuccess": "Xcode タスクがエラーなしで実行されました。",
  "loc.messages.TempKeychainDeleteFailed": "ビルド中に作成された一時キーチェーンを削除することができませんでした: `%s`",
  "loc.messages.ProvProfileDeleteFailed": "プロビジョニング プロファイル `%s` を削除することができませんでした。",
  "loc.messages.ExportMethodNotIdentified": "使用するエクスポート方法をアーカイブ ファイルから自動識別できませんでした。これにより、ビルド中にエラーが発生したり、無効なパッケージが生成されたりする可能性があります。エクスポートに失敗する場合、署名を有効にする ([署名スタイル] を [プロジェクトの既定値] に設定) か、エクスポートを手動で構成 ([エクスポート オプション] を [Plist] または [指定] に設定) してください。",
  "loc.messages.ExportOptionsPlistInvalidFilePath": "[エクスポート オプション] の plist ファイルが '%s' に存在しません。有効な plist ファイルへのパスを指定してください。",
  "loc.messages.SchemeRequiredForArchive": "xcodebuild アーカイブおよびエクスポートを使用してパッケージを生成するには、スキームを指定する必要があります。",
  "loc.messages.WorkspaceOrProjectRequiredForArchive": "xcodebuild アーカイブおよびエクスポートを使用してパッケージを生成するには、ワークスペースまたはプロジェクト パスを指定する必要があります。",
  "loc.messages.FailedToGenerateExportOptionsPlist": "IPA をエクスポートするための [エクスポート オプション] の plist ファイルの自動生成に失敗しました。[パッケージのオプション] で [エクスポート オプション] の plist ファイルを指定してください。",
  "loc.messages.LocateXcodeBasedOnVersion": "Xcode `%s` の Developer パスを検索しています",
  "loc.messages.FailedToLocateSpecifiedXcode": "Xcode '%s' の Developer パスを解決できません。エージェント マシンで '%s' 環境変数を設定するか、[Xcode バージョン] を [既定] または [パスの指定] に設定してください。",
  "loc.messages.CantDetermineProvisioningStyle": "プロビジョニング スタイルが pbxProject ファイル内に見つかりませんでした。自動署名が使用されます。プロジェクトで手動署名を使用している場合は、自動エクスポートが失敗する可能性があります。この問題を回避するには、'Export options' を 'Plist' または 'Specify' に設定します。",
  "loc.messages.MultipleSchemesFound": "ワークスペースに複数のスキームが含まれています。スキームが選択されていません。'Scheme' を使用してターゲット スキームを指定してください。",
  "loc.messages.NoSchemeFound": "共有スキームがワークスペース内に見つかりません。スキームを共有するには、Xcode の \"Manage Schemes\" を使用します。",
  "loc.messages.SchemeSelected": "ワークスペースには、単一の共有スキームが含まれています。'%s' が使用されます。",
  "loc.messages.FailedToFindScheme": "ワークスペースでスキームが見つかりませんでした。[スキーム] を使用して、ターゲット スキームを指定します。",
  "loc.messages.OutputDirectoryIgnored": "ビルド出力 (バイナリ) の出力ディレクトリは無視されます。出力ディレクトリを指定することは、'%s' アクションと矛盾します。",
  "loc.messages.NoDestinationPlatformWarning": "UI tests must be run against a simulator or a connected device. In the Xcode task, set `Destination platform` to a value other than `Default`.",
  "loc.messages.XcprettyNotInstalled": "xcpretty is not installed on the build server. xcodebuild raw output will be shown. Publishing test results will fail if xcpretty is not installed."
}