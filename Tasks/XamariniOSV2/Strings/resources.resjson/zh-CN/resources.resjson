{
  "loc.friendlyName": "Xamarin.iOS",
  "loc.helpMarkDown": "[详细信息](https://go.microsoft.com/fwlink/?LinkID=613729)",
  "loc.description": "Build an iOS app with Xamarin on macOS.",
  "loc.instanceNameFormat": "生成 Xamarin.iOS 解决方案 $(solution)",
  "loc.releaseNotes": "iOS signing set up has been removed from the task. Use `Secure Files` with supporting tasks `Install Apple Certificate` and `Install Apple Provisioning Profile` to setup signing. Updated options to work better with `Visual Studio for Mac`.",
  "loc.group.displayName.sign": "签名和预配",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.solution": "解决方案",
  "loc.input.help.solution": "要生成的 Xamarin.iOS 解决方案的存储库根路径的相对路径。可能包含通配符。",
  "loc.input.label.configuration": "配置",
  "loc.input.help.configuration": "标准配置是 Ad-Hoc、AppStore、Debug、Release。",
  "loc.input.label.clean": "清理",
  "loc.input.help.clean": "在生成前运行清理生成(/t:clean)。",
  "loc.input.label.packageApp": "创建应用包",
  "loc.input.help.packageApp": "指示是否应作为生成的一部分生成 IPA。",
  "loc.input.label.forSimulator": "为 iOS 模拟器生成",
  "loc.input.help.forSimulator": "可以选择针对 iOS 模拟器(而不是物理 iOS 设备)进行生成。",
  "loc.input.label.runNugetRestore": "运行 NuGet 还原",
  "loc.input.help.runNugetRestore": "Optionally run `nuget restore` on the Xamarin iOS solution to install all referenced packages before build. The 'nuget' tool in the PATH of the build agent machine will be used. To use a different version of NuGet or set additional arguments, use the [NuGet Tool Installer](https://go.microsoft.com/fwlink/?linkid=852538) task.",
  "loc.input.label.args": "参数",
  "loc.input.help.args": "将用于生成的其他命令行参数。",
  "loc.input.label.cwd": "工作目录",
  "loc.input.help.cwd": "用于运行生成的工作目录。该目录为空时，将使用存储库的根目录。",
  "loc.input.label.buildToolLocation": "Build tool path",
  "loc.input.help.buildToolLocation": "Optionally supply the full path to MSBuild (the Visual Studio for Mac build tool). When empty, the default MSBuild path is used.",
  "loc.input.label.iosSigningIdentity": "签名标识",
  "loc.input.help.iosSigningIdentity": "Optionally override the signing identity that will be used to sign the build. If nothing is entered, the setting in the project will be used.",
  "loc.input.label.provProfileUuid": "预配配置文件 UUID",
  "loc.input.help.provProfileUuid": "将用于此生成的已安装设置配置文件的可选 UUID。",
  "loc.messages.SignIdNotFound": "未找到 iOS 签名标识。请确认已提供了签名和预配信息。",
  "loc.messages.ProvProfileUUIDNotFound": "未找到预配配置文件 %s 的预配配置文件 UUID。",
  "loc.messages.XamariniOSSucceeded": "Xamarin.iOS 任务执行完成，没有发生错误。",
  "loc.messages.XamariniOSFailed": "Xamarin.iOS task failed with error %s. For guidance on setting up the build pipeline, see https://go.microsoft.com/fwlink/?LinkId=760847.",
  "loc.messages.MSB_Build0": "生成 {0}",
  "loc.messages.MSB_DetectedNuGetExtensionsLoaderPath0": "已检测到 NuGet 扩展加载程序路径。将环境变量 NUGET_EXTENSIONS_PATH 设置为“{0}”。",
  "loc.messages.MSB_SolutionNotFoundUsingSearchPattern0": "使用搜索模式“{0}”找不到解决方案。",
  "loc.messages.MSB_RestoreNuGetPackagesDeprecated": "The 'Restore NuGet Packages' option is deprecated. To restore NuGet packages in your build, add a NuGet Tool Installer task to your build pipeline.",
  "loc.messages.MSB_BuildToolNotFound": "macOS 或 Linux 代理上找不到 MSBuild 或 xbuild (Mono)。",
  "loc.messages.MultipleSolutionsFound": "已找到多个解决方案文件匹配项。将使用第一个匹配项: %s",
  "loc.messages.SolutionDoesNotExist": "虽然已指定解决方案文件，但它不存在: %s",
  "loc.messages.BuildRequiresMac": "Xamarin iOS builds require a macOS agent. Apple does not support iOS builds on a Linux or Windows agent."
}