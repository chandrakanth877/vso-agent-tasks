{
  "loc.friendlyName": "Jenkins 队列作业",
  "loc.helpMarkDown": "This task queues a job on a [Jenkins](https://jenkins.io/) server. Full integration capabilities require installation of the [Team Foundation Server Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Team+Foundation+Server+Plugin) on Jenkins. [More Information](http://go.microsoft.com/fwlink/?LinkId=816956).",
  "loc.description": "在 Jenkins 服务器上排列作业",
  "loc.instanceNameFormat": "排列 Jenkins 作业: $(jobName)",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.serverEndpoint": "Jenkins service connection",
  "loc.input.help.serverEndpoint": "Select the service connection for your Jenkins instance.  To create one, click the Manage link and create a new Jenkins service connection.",
  "loc.input.label.jobName": "作业名称",
  "loc.input.help.jobName": "要从排队的 Jenkins 作业的名称。此名称必须与 Jenkins 服务器上的作业名称完全匹配。",
  "loc.input.label.isMultibranchJob": "作业属于多分支管道类型",
  "loc.input.help.isMultibranchJob": "此作业属于多分支管道类型。如果选择此项，请输入相应的分支名称。Jenkins v5.3.4 或更高版本需要 Team Foundation Server 插件。",
  "loc.input.label.multibranchPipelineBranch": "多分支管道分支",
  "loc.input.help.multibranchPipelineBranch": "在指定的分支上对此多分支管道作业排队。Jenkins v5.3.4 或更高版本需要 Team Foundation Server 插件。",
  "loc.input.label.captureConsole": "获取控制台输出并等待完成",
  "loc.input.help.captureConsole": "If selected, this task will capture the Jenkins build console output, wait for the Jenkins build to complete, and succeed/fail based on the Jenkins build result.  Otherwise, once the Jenkins job is successfully queued, this task will successfully complete without waiting for the Jenkins build to run.",
  "loc.input.label.capturePipeline": "获取管道输出并等待管道完成",
  "loc.input.help.capturePipeline": "If selected, this task will capture the full Jenkins build pipeline console output, wait for the full Jenkins build pipeline to complete, and succeed/fail based on the Jenkins build pipeline result.  Otherwise, once the first Jenkins job completes, this task will successfully complete without waiting for full Jenkins build pipeline to run.",
  "loc.input.label.parameterizedJob": "参数化的作业",
  "loc.input.help.parameterizedJob": "选择 Jenkins 作业是否接受参数。即使要使用所有默认参数值且实际未指定任何参数，也应选择此选项。",
  "loc.input.label.jobParameters": "作业参数",
  "loc.input.help.jobParameters": "Specify job parameters, one per line, in the form <b>`<parameterName>=<parameterValue>`</b><p>To set a parameter to an empty value (useful for overriding a default value), leave off the parameter value. For example, specify <b>`<parameterName>=`</b><p>Variables are supported. For example, to set a <b>`commitId`</b> parameter value to the Git commit ID of the build, use: <b>`commitId=$(Build.SourceVersion)`</b>. See the [documentation on variables](https://go.microsoft.com/fwlink/?linkid=875288) for more details.<p>Supported Jenkins parameter types are: <ul><li>`Boolean`</li><li>`Choice`</li><li>`Password`</li><li>`String`</li></ul>",
  "loc.messages.FailedToGenerateSummary": "未能生成版本摘要。",
  "loc.messages.succeeded": "成功",
  "loc.messages.unstable": "不稳定",
  "loc.messages.failed": "失败",
  "loc.messages.notbuilt": "未生成",
  "loc.messages.aborted": "已中止",
  "loc.messages.unknown": "未知",
  "loc.messages.console": "控制台",
  "loc.messages.JenkinsPipelineComplete": "Jenkins 管道已完成",
  "loc.messages.JenkinsJobComplete": "Jenkins 作业已完成",
  "loc.messages.JenkinsJobQueued": "Jenkins 作业已排队",
  "loc.messages.JenkinsPipelineFailed": "Jenkins 管道失败",
  "loc.messages.JenkinsJobFailed": "Jenkins 作业失败",
  "loc.messages.JenkinsJobFailedtoQueue": "Jenkins 作业未能排队",
  "loc.messages.JenkinsJobQueueUriInvalid": "无法访问由 Jenkins 返回的作业队列的 URI (%s)。请在“管理 Jenkins”、“配置系统”下，验证 Jenkins 服务器上的 \"Jenkins URL\" 配置是否正确。错误详细信息: %s"
}